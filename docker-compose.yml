version: '3'

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongodb_data:/data/db

  spring-app:
    build: ./produit-back/
    container_name: spring-app
    depends_on:
      - mongodb
      - discovery-server
    ports:
      - "8085:8080"
    environment:
      server.port: 8080
      spring.data.mongodb.username: root
      spring.data.mongodb.password: example
      spring.data.mongodb.authentication-database: admin
      spring.data.mongodb.host: mongodb
      spring.data.mongodb.database: productDB
      eureka.client.serviceUrl.defaultZone: http://discovery-server:8761/eureka/
  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    depends_on:
      - mongodb
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"

  order-service:
    build: ./commande-node/
    container_name: order-service
    depends_on:
      - mongodb
      - spring-app
      - discovery-server
    ports:
      - "9090:9090"
    environment:
      MONGO_URI: mongodb://root:example@mongodb:27017/ordersDB?authSource=admin
      PRODUCT_SERVICE_URL: http://spring-app:8080/produits
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8761/eureka/

  discovery-server:
    container_name: discovery-server
    build:
      context: ./discovery-server/
      dockerfile: Dockerfile
    ports:
      - "8761:8761"

  krakend:
    image: devopsfaith/krakend:2.1.0
    container_name: krakend
    ports:
      - "8000:8000"
    volumes:
      - ./krakend/krakend.json:/etc/krakend/krakend.json:ro
    depends_on:
      - order-service
      - spring-app

volumes:
  mongodb_data:
